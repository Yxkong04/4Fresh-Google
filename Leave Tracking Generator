function onFormSubmit(e) {
    var sheetName = "Leave Request Form";
    var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(sheetName);
    var activeRow = e.range.getRow();

    //Fetch values directly from column A to L in a single line
    var [columnA, columnB, columnC, columnD, columnE, columnF, columnG, columnH, columnI, columnJ, 
          columnK, columnL, columnM, columnN, columnO, columnP, columnQ, columnR, columnS, 
          columnT, columnU, columnV, columnW, columnX, columnY, columnZ
      ] = sheet.getRange(activeRow, 1, 1, 26).getValues()[0];

    var NumDays = calculateDateDifference(columnH, columnI); //Calculate the duration between "Start Date" (Column H) and "End Date" (Column I)
    sheet.getRange(activeRow, 10).setValue(NumDays); // Set the calculated duration in Column J (index 10)
  
  setSupportingDocumentsColumnDefaultValue ();

  function ConvertLeaveTypeToLeaveTypeID() {
    if(columnE === "Sick leave") {
      sheet.getRange(activeRow, 5).setValue("LT001"); 
    }
    else if(columnE === "Annual leave") {
      sheet.getRange(activeRow, 5).setValue("LT002"); 
    }
    else if(columnE === "Maternity leave") {
      sheet.getRange(activeRow, 5).setValue("LT003"); 
    }
    else if(columnE === "Emergency leave") {
      sheet.getRange(activeRow, 5).setValue("LT004"); 
    }
    else if(columnE === "Paternity leave") {
      sheet.getRange(activeRow, 5).setValue("LT005"); 
    }
    else if(columnE === "Vacation leave") {
      sheet.getRange(activeRow, 5).setValue("LT006"); 
    }
  }

  var LeaveType = getLeaveType(columnE);

  //Function for Calculate Date form Start Date and End Date
  function calculateDateDifference(startDate, endDate) {
    var startTimestamp = new Date(startDate).getTime();
    var endTimestamp = new Date(endDate).getTime();
    if (isNaN(startTimestamp) || isNaN(endTimestamp) || startTimestamp > endTimestamp) {
      return "Invalid Date";
    }
    var millisecondsInADay = 1000 * 60 * 60 * 24;
    var differenceInDays = Math.floor((endTimestamp - startTimestamp) / millisecondsInADay)+1;
    return differenceInDays;
  }
  
  var LeaveBalance = getLeaveBalance(columnB, columnE); // Calculate leave balance based on the leave type ID and email address(Column E and B)
  var employeeName = getEmployeeName(columnC);
  //Check if leave duration exceeds leave balance
  if (NumDays > LeaveBalance) {
    //Send email notification of insufficient leave balance
    sendInsufficientBalanceEmail(columnB, LeaveType, NumDays, employeeName);
    sheet.getRange(activeRow, 11).setValue("Auto-Rejected");
    sheet.getRange(activeRow, 12).setValue("Insufficient leave balance.");
    sheet.getRange(activeRow, 13).setValue("Sent");
  } else {
    //Send email notification of sufficient balance
    sendSufficientBalanceEmail(columnB, LeaveType, NumDays, employeeName);
    var managerEmail = getManagerEmail();
    sendManagerNotification(managerEmail, employeeName, LeaveType, columnH, columnI, NumDays);
    sheet.getRange(activeRow, 11).setValue("Pending");
  }

  function setSupportingDocumentsColumnDefaultValue (){
    if (columnG === "") {
      sheet.getRange(activeRow, 7).setValue("None");
    }
    else {
      return;
    }
  }
}

function getManagerEmail() {
  //Return the specific manager's email
  //return "ganesh.subramaniam@gmail.com"; // Replaced with HR manager's email - To test can enter your own email!
  return "wailung8826@gmail.com";
}

function getLeaveBalance(Email, LeaveTypeID) {
  var Leave_BalanceSheetName = "Leave Balance";
  var Leave_BalanceSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(Leave_BalanceSheetName);
  var Leave_BalanceData = Leave_BalanceSheet.getDataRange().getValues();

  //Find the row that matches the email and leave type
  for (var i = 1; i < Leave_BalanceData.length; i++) {
    //Assuming row 1 contains headers
    var sheetEmailAddress = Leave_BalanceData[i][0]; // Email is in the first column
    var sheetLeaveTypeID = Leave_BalanceData[i][1]; // Leave Type is in the second column
    var sheetLeaveBalance = Leave_BalanceData[i][4]; // Leave Balance is in the fourth column

    if (sheetEmailAddress === Email && sheetLeaveTypeID === LeaveTypeID) {
      return sheetLeaveBalance;
      Logger.log(sheetLeaveBalance)
    }
  } 
  //If no matching record is found, return a default value
  return 0; //Default Leave Balance if no match is found
}

//Implement this function to send email notification for insufficient leave balance to employee
function sendInsufficientBalanceEmail(SendTo, LeaveType, NumDays, employeeName) {
  var EmailSubject = "Insufficient Leave Balance - " + LeaveType;
  var EmailBody = 
    "Dear " + employeeName + ",<br><br>Your request for " + LeaveType + " has been received, but the requested duration (" + NumDays + " days) exceeds your available " + LeaveType + " balance. (" + getLeaveBalance(SendTo, LeaveType) + " days)<br><br>Kindly review your leave balance and consider submitting a new request. Thank you!<br><br><br>" + "Best Regards,<br>" + "4Fresh Human Resource";

    SendEmail(SendTo, EmailSubject, EmailBody);
}

//Implement this function to send email notification for sufficient leave balance to employee
function sendSufficientBalanceEmail (SendTo, LeaveType, NumDays, employeeName) {
  var EmailSubject = "Leave Request Submitted - " + LeaveType;
  var EmailBody = "Dear " + employeeName + ",<br><br>Your request for " + LeaveType + " has been submitted and is currently under review. <br><br>The requested duration is " + NumDays + " days. <br>" + "<br>Once approved, you will receive an email notification. Please make sure to manage your workload accordingly during your absence. Thank you!<br><br><br>" + "Best Regards,<br>" + "4Fresh Human Resource";

  SendEmail(SendTo, EmailSubject, EmailBody);
  Logger.log(SendTo, EmailSubject, EmailBody);
}

function sendManagerNotification(managerEmail, employeeName, LeaveType, startDate, endDate, NumDays) {
  var EmailSubject = "New Leave Request Submitted by " + employeeName;
  var EmailBody = 
    "Dear Manager,<br><br>A new leave request has been submitted by " + employeeName + ".<br><br><b>Leave Details:</b><br><ul><li>Type of Leave: " + LeaveType + "</li><br><li>Start Date: " + startDate + "</li><br><li>End Date: " + endDate + "</li><br><li>Duration: " + NumDays + " days</li></ul><br>" + "Please review the request at your earliest convenience.<br><br><br>" + "Best Regards,<br>" + "4Fresh Human Resource";

    SendEmail(managerEmail, EmailSubject, EmailBody);
}

//This function send the email to the specified employee
function SendEmail(SendTo, EmailSubject, EmailBody) {
  MailApp.sendEmail({
    to: SendTo,
    subject: EmailSubject,
    htmlBody: EmailBody,
  });
}

function onColumnChangeSentNotSent(e) {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Leave Request Form");
  var activeCell = e.source.getActiveRange();

  //Check if the changed cell is in column M, Index = 13
  if (activeCell.getColumn() === 13) {
    var row = activeCell.getRow();

    var employeeID = sheet.getRange(row, 3).getValue();
    var columnB = sheet.getRange(row, 2).getValue();
    var columnE = sheet.getRange(row, 5).getValue();
    var columnH = sheet.getRange(row, 8).getValue();
    var columnI = sheet.getRange(row, 9).getValue();
    var columnJ = sheet.getRange(row, 10).getValue();
    var columnK = sheet.getRange(row, 11).getValue();
    var columnL = sheet.getRange(row, 12).getValue();

    var employeeName = getEmployeeName(employeeID);
    var LeaveType = getLeaveType(columnE);

    var columnChange = activeCell.getValue();
    if(columnChange === "Sent") {
      if(columnK === "Approved") {
        var SendTo = columnB;
        var EmailSubject = "Leave Application Approved! - " + LeaveType;
        var ReceiverCCList = ["wailung0331@gmail.com", "wailung8826@gmail.com"];
        var CCList = ReceiverCCList.filter(function(value) { return value.trim() !== "";}).join(",");
        var EmailBody = "Dear " + employeeName + " (" + employeeID + "),<br><br>We are pleased to inform you that your leave application has been approved.<br><br><b>Leave Details:</b><br><br><ul><li><b>Type of Leave: </b>" + LeaveType + "</li><br><li><b>Start Date: </b>" + columnH + "</li><br><li><b>End Date: </b>" + columnI + "</li><br><li><b>Duration: </b>" + columnJ + " days</li><br><li><b>Approver's Remarks: " + columnL + "</b></li></ul><br>Please ensure that all necessary arrangements are made before your leave period. If you have any further questions or need to provide additional information, please do not hesitate to contact your manager or the HR department. <br><br>We wish you a restful and enjoyable time during your leave. <br><br><br>Best Regards,<br>4Fresh Human Resource";

        Logger.log(SendTo, EmailSubject, CCList, EmailBody);

        SendEmail(SendTo, EmailSubject, EmailBody);
      }
      else if (columnK === "Rejected") {
        var SendTo = columnB;
        var EmailSubject = "Leave Application Rejected - " + LeaveType;
        var ReceiverCCList = ["", ""];
        var CCList = ReceiverCCList.filter(function(value) { return value.trim() !== "";}).join(",");
        var EmailBody = "Dear " + employeeName + " (" + employeeID + "),<br><br>We regret to inform you that your recent leave application has been rejected.<br><br><b>Leave Details:</b><br><br><ul><li><b>Type of Leave: </b>" + LeaveType + "</li><br><li><b>Start Date: </b>" + columnH + "</li><br><li><b>End Date: </b>" + columnI + "</li><br><li><b>Duration: </b>" + columnJ + " days</li><br><li><b>Approver's Remarks: " + columnL + "</b></li></ul><br>We understand that this may be disappointing news. If you have any questions or need further clarification regarding this decision, please feel free to contact your manager or the HR department. <br><br>We encourage you to discuss any urgent leave requirements directly with your manager so that we can find suitable solution. <br><br>Thank you for your understanding. <br><br><br>Best Regards,<br>4Fresh Human Resource";

        Logger.log(SendTo, EmailSubject, CCList, EmailBody);

        SendEmail(SendTo, EmailSubject, EmailBody);
      }
      else {
        return;
      }
    }
    else if (columnChange === "Not Sent") {
      return;
    }
  }
}

function getEmployeeName(employeeID) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  
  var employeeResponsesSheet = ss.getSheetByName("EmployeeResponses");
  
  var dataRange = employeeResponsesSheet.getDataRange();
  
  var data = dataRange.getValues();
  
  // Loop through the data to find the Employee ID and return the corresponding Employee Name
  for (var i = 1; i < data.length; i++) { // Start from the second row
    if (data[i][1] == employeeID) { // Employee ID column (B) in EmployeeResponses
      return data[i][2]; // Employee Name column (C) in EmployeeResponses
    }
  }
  
  // Return a default message if Employee ID is not found
  return "Employee ID not found";
}

function getLeaveType(LeaveTypeID) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  
  var leaveBalanceSheet = ss.getSheetByName("Leave Balance");
  
  var dataRange = leaveBalanceSheet.getDataRange();
  
  var data = dataRange.getValues();
  
  // Loop through the data to find the Leave Type ID and return the corresponding Leave Type
  for (var i = 1; i < data.length; i++) { // Start from the second row
    if (data[i][1] == LeaveTypeID) { // Leave Type ID column (B) in Leave Balance
      return data[i][5]; // Leave Type column (F) in Leave Balance
    }
  }
  
  // Return a default message if Leave Type is not found
  return "Leave Type not found";
}
